VUE INSTAGRAM CLONE AÇIKLAMALAR

* vue cli kurulumu npm install -g @vue/cli

* proje kurulumu vue create instagram-clone 

* kurulumda manuel olarak router, vuex vs kurduk, böyl olunca pek fazla nuxt ile başlamaya gerek kalmadı

* router da index.js de home ve about un dahil edilmesine dikkat, home normal yolla dahil edilmiş ama about bir func ile dahil ediliyor, bu şekilde yapılınca App.vue çalışırken en başta about u da getirmiyor, about path ine tıklayınca/girince about u dahil ediyor böyle bir kullanımda var, buna code splitting denir, mesela home a illa girer kullanıcı ama about a girmek istemeyebilir, bunun sebebi

* postCss dosyasını hazırlayalım ve projee dahil edelim bunun nasıl yapılacağı vue cli docs da var

* postcss için gerekli paketleri yüklemeliyiz, postcss-nested ve postcss custom-media gibi

* tipografi için CustomText.vue oluşturduk, name verdik, props gelecek dedik ve tag ını component olarak oluşturduk ve bunu dinamik yaptık, yani tag da gelecek ayrıca size ı da props olarak ayarladık, dimanik olarak class a verdik ve validator koyduk, bunu da vuejs.org dan aldık, bunu Home.vue ya import edip test edelim, CustomText.vue yu nasıl kullandığımıza dikkat, 

* css dosyamızıda main.js e import edelim, 

* svg iconların hazırlanması, 
https://vue-svg-loader.js.org/#example
burada bir paket var bunun yaptığı svg dosyalrını sanki vue componentiymiş gibi hazırlayıp kullanabilmemizi sağlıyor, bunun için bazı kurulumlar yapmamız lazım, onarı yapalım, server ı dudurup gerekli dosyaları projeye ekleyelim
npm i -D vue-svg-loader vue-template-compiler

kurulum sonrası konfigurasyonunu yapalım, biz projeyi vue CLI ile kurduğumuz için buna göre yapalım, 
bunun için proje içine vue.config.js isimli bir doya oluşturup sayfadaki kodlarını bunun içine koyacağız, bunu yaptıktan sonra src içinde icons adında bir folder > home.svg > içine svg yi yapıştıralım, ve projeyi yeniden ayaga kaldıralım, npm run serve ile
gerekli import ve components e ekleme sonrası svg yi normal comp gibi kullandık başarılı, width ve height da kullanabiliriz, 

* sayfaları yapalım, about.vue silelim, router dan da path ini yoruma alalım,views in altına home folder Home.vue yuda index.vue yapıp onun içine, benzer şey profile > 
Igtv.vue, Index.vue, Post.vue, Save.vue, Tag.vue hazırladık, 

* şimdi genel çalışma nasıl, App.vue uygulamayı alıyor ekrana basıyor, ekranda linkler var, mesela about a tıklayınca tıklayınca router dan adresi alıyor o adresteki sayfayı getirip <router-view/> a basıyor, şimdi aynı sistemi profile sayfası altında yapacağız, router a gidelim, "/profile" pathini hazırladıktan sonra bunun altında bunun child ları olacak onları ayarlayalım, normal path in altında children lar olacaksa onları da children : [{path:..., name : ..}, {...}, {...}] şeklinde aynı şekilde ayarlayacağız, koda bak, 

* profile daki linkleri ayarlayalım; 
    <router-link to="/profile/post">Post</router-link> 

* router ayartlarınıda aşağıdaki şekilde yapacağız  {
        path: "igtv",
        name: "ProfileIGTV",
        component: () =>
          import(/* webpackChunkName: "profile" */ "../views/profile/igtv.vue"),
      },

* explore > index.js yapalım ve direct > ... yapalım, sayfa kasörleri hazır, profile > sayfa yapıları hazır, App.vue da menuleri yapalım,
    <router-link to="/">Home</router-link> |
      <!-- <router-link to="/about">About</router-link> -->
      <router-link to="/direct">direct</router-link>
      <router-link to="/explore">Explore</router-link>
      <router-link to="/profile">Profile</router-link>
ve router da ayarlamayı yapalım, 

* master-page hazırlayalım, master-page sayfalar değişse bile instagramdaki yukarıdaki kısım değişmiyor, bu, aslında ilk master-page imiz bu anlamda App.vue, components > Header.vue yapalım ve App.vue içindeki kısmı oraya Header olarak alalım, bunuda Header.vue içine koyalım ve bunu App.vue içinden çağıralım, ikinci master page imizde views >profile>index.vue , 

* header tasarımı, anasayfa için layout oluşturma, 